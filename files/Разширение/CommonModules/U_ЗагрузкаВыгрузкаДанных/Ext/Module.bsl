#Область Монобанк

Функция ПолучитьПараметрыВызоваМонобанк()
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ДатаПоследнейСинхронизации", 	U_ОнлайнСтатистикаПовтИсп.ДатаПоследнейЗагрузки_Получить());
	СтруктураДанных.Вставить("Идентификатор", 				U_ОнлайнСтатистикаПовтИсп.Идентификатор_Получить());
	СтруктураДанных.Вставить("Пароль", 						U_ОнлайнСтатистикаПовтИсп.ПарольБанк_Получить());
	
	Возврат СтруктураДанных;
КонецФункции

Функция ПолучитьПараметрыЗапросаМонобанк(АдресРесурса, КлючАпи = "") 
	СтруктураПараметровЗапроса = Новый Структура;
	СтруктураПараметровЗапроса.Вставить("Сервер", 				"api.monobank.ua");
	СтруктураПараметровЗапроса.Вставить("АдресРесурса", 		АдресРесурса);
	СтруктураПараметровЗапроса.Вставить("ЗащищенноеСоединение", Новый ЗащищенноеСоединениеOpenSSL);
	
	Если Не ПустаяСтрока(КлючАпи) Тогда
		Заголовки = Новый Соответствие;
		Заголовки.Вставить("X-Token", КлючАпи);
		
		СтруктураПараметровЗапроса.Вставить("Заголовки", Заголовки);
	КонецЕсли;
	
	Возврат СтруктураПараметровЗапроса;
КонецФункции
	
Функция ПолучитьДанныеСчетовМоноБанк(КлючАпи) Экспорт 
	ПараметрыЗапроса = ПолучитьПараметрыЗапросаМонобанк("/personal/client-info", КлючАпи);
	РезультатЗапроса = U_ПроцедурыРаботыСHTTP.Получить(ПараметрыЗапроса, "JSON");
	
	Возврат РезультатЗапроса;
КонецФункции

Функция УстановитьВебХукМоноБанк(КлючАпи) Экспорт
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("webHookUrl", U_ОнлайнСтатистикаПовтИсп.АдресВебХукаМонобанк_Получить());
	
	ПараметрыЗапроса = ПолучитьПараметрыЗапросаМонобанк("/personal/webhook", КлючАпи);
	РезультатЗапроса = U_ПроцедурыРаботыСHTTP.ОтправитьДляОбработки(ПараметрыЗапроса, СтруктураДанных, "JSON", "JSON");
	
	РезультатЗапроса.Удалить("HTTPОтвет");
	
	Возврат РезультатЗапроса;
КонецФункции

Процедура ПолучитьВыпискуМоноБанк() Экспорт 
	Параметры = ПолучитьПараметрыВызоваМонобанк();
	
	Если ПустаяСтрока(Параметры.Пароль) Тогда
		Возврат;
	КонецЕсли;
	
	//Отримання виписки за час від {from} до {to} часу в секундах в форматі Unix time Максимальний час за який можливо отримувати 
	//виписку 31 доба + 1 година (2682000 секунд) Обмеження на використання функції не частіше ніж 1 раз у 60 секунд.

	НачалопПериода = ?(ЗначениеЗаполнено(Параметры.ДатаПоследнейСинхронизации), Параметры.ДатаПоследнейСинхронизации, ТекущаяДата());
	КонецПериода   = НачалопПериода;
	
	ДатаНачала    = НачалоДня(НачалопПериода) - 2505600; // - 29 дней
	ДатаОкончания = КонецДня(КонецПериода);
	
	АдресЗапроса = СтрШаблон("/personal/statement/%1/%2/%3",
						СокрЛП(Параметры.Идентификатор),
						Формат(ПолучитьUnixTimeStampИзДаты(ДатаНачала), "ЧЦ=; ЧГ="),
						Формат(ПолучитьUnixTimeStampИзДаты(ДатаОкончания), "ЧЦ=; ЧГ="));
		
	ПараметрыЗапроса = ПолучитьПараметрыЗапросаМонобанк(АдресЗапроса, Параметры.Пароль);
			
	РезультатОтправки = U_ПроцедурыРаботыСHTTP.Получить(ПараметрыЗапроса, "JSON");
	
	//U_РегистрацияРаботыПользователей.ДобавитьЗаписьЖурналаРегистрации("Информация_Справочник_БанковскиеСчетаОрганизаций.Получение выписки", "Справочник.БанковскиеСчетаОрганизаций", Параметры.БанковскийСчет, , , "Период " + Формат(НачалопПериода, "ДФ=dd.MM.yyyy; ДЛФ=D") + "-" + Формат(КонецПериода, "ДФ=dd.MM.yyyy; ДЛФ=D") + ": " + ?(РезультатОтправки.Успех, 200, 403)); 
	
	Если РезультатОтправки.Успех Тогда
		Индекс = РезультатОтправки.Данные.ВГраница();
		
		Пока Индекс >= 0 Цикл 
			ОбработатьПлатежВыпискиМоноБанк(РезультатОтправки.Данные[Индекс]);
			
			Индекс = Индекс - 1;
		КонецЦикла;
		
		Параметры.ДатаПоследнейСинхронизации = ?(НачалоДня(КонецПериода) < НачалоДня(ТекущаяДата()), КонецДня(КонецПериода) + 1, ТекущаяДата());
	КонецЕсли;
КонецПроцедуры

Процедура ОбработатьПлатежВыпискиМоноБанк(Элемент)
	Дата = ПолучитьДатуИзUnixTimeStamp(Элемент.time);
	
	Сумма             = Элемент.amount / 100;
	Комиссия		  = Элемент.commissionRate / 100;
	НазначениеПлатежа = Элемент.description;
	Код               = Элемент.id;
	
	Если Сумма = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	НазначениеПлатежа = СтрЗаменить(НазначениеПлатежа, "&#38;quot;", "&quot;");
	НазначениеПлатежа = U_ПроцедурыРаботыСHTML.ПолучитьПредставлениеСтрокиHTML(НазначениеПлатежа);
		
	ПараметрыДокумента = СоздатьПараметрыДокумента();
	ПараметрыДокумента.Дата       = Дата;
	ПараметрыДокумента.Номер      = Код;
	ПараметрыДокумента.Сумма      = Сумма;
	ПараметрыДокумента.Комиссия   = Комиссия;
	ПараметрыДокумента.Назначение = НазначениеПлатежа;
	
	СоздатьДокумент(ПараметрыДокумента); 
КонецПроцедуры

Процедура ОбработатьВебХукНовогоПлатежаМоноБанк(ДанныеПлатежа) Экспорт
	ИдентификаторАккаунта = U_ОнлайнСтатистикаПовтИсп.Идентификатор_Получить();
	Если ИдентификаторАккаунта = ДанныеПлатежа.data.account Тогда
		ОбработатьПлатежВыпискиМоноБанк(ДанныеПлатежа.data.statementItem);
	КонецЕсли;
КонецПроцедуры

Функция СоздатьПараметрыДокумента(Вид = "", ОпределятьУникальностьПоНазначению = Ложь) Экспорт 
	ПараметрыДокумента = Новый Структура;
	ПараметрыДокумента.Вставить("Дата",                               ТекущаяДата());
	ПараметрыДокумента.Вставить("Номер",                              "1");
	ПараметрыДокумента.Вставить("Счет",                               "");
	ПараметрыДокумента.Вставить("Сумма",                              0);
	ПараметрыДокумента.Вставить("Комиссия",                           0);
	ПараметрыДокумента.Вставить("Назначение",                         "");
		
	Возврат ПараметрыДокумента;
КонецФункции

Процедура СоздатьДокумент(ПараметрыДокумента)
	НайденныйДокумент = Документы.U_ОнлайнПлатеж.НайтиПоНомеру(ПараметрыДокумента.Номер);
	Если Не ЗначениеЗаполнено(НайденныйДокумент) Тогда
		ДокументОбъект = Документы.U_ОнлайнПлатеж.СоздатьДокумент();
		ДокументОбъект.Дата  		= ПараметрыДокумента.Дата;
		ДокументОбъект.Номер 		= ПараметрыДокумента.Номер;
		ДокументОбъект.Сумма 		= ПараметрыДокумента.Сумма;
		ДокументОбъект.Комиссия 	= ПараметрыДокумента.Комиссия;
		ДокументОбъект.Назначение 	= ПараметрыДокумента.Назначение;
		
		ДокументОбъект.Записать();
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьUnixTimeStampИзДаты(Дата) 
	Возврат УниверсальноеВремя(Дата) - Дата(1970, 1, 1);
КонецФункции

Функция ПолучитьДатуИзUnixTimeStamp(UnixTimeStamp)  
	Возврат МестноеВремя(Дата(1970, 1, 1) + Число(UnixTimeStamp)); 
КонецФункции

#КонецОбласти

#Область СерверСтатистики

Процедура ВыгрузитьСтатистику() Экспорт 
			
КонецПроцедуры

//"services/shipment/saveShipments"
Функция ОтправитьДанныеСтатистики(ТочкаВхода, Данные)
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "application/json");
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("Сервер", 		U_ОнлайнСтатистикаПовтИсп.АдресСерверСтатистики_Получить());
	ПараметрыЗапроса.Вставить("Порт", 			U_ОнлайнСтатистикаПовтИсп.ПортСерверСтатистики_Получить());
	ПараметрыЗапроса.Вставить("АдресРесурса", 	ТочкаВхода);
	ПараметрыЗапроса.Вставить("Пользователь", 	U_ОнлайнСтатистикаПовтИсп.ПользовательСерверСтатистики_Получить());
	ПараметрыЗапроса.Вставить("Пароль", 		U_ОнлайнСтатистикаПовтИсп.ПарольСерверСтатистики_Получить());
	ПараметрыЗапроса.Вставить("Заголовки", 		Заголовки);
	
	Если U_ОнлайнСтатистикаПовтИсп.HTTPSСерверСтатистики_Получить() Тогда
		ПараметрыЗапроса.Вставить("ЗащищенноеСоединение", Новый ЗащищенноеСоединениеOpenSSL);
	КонецЕсли;
	
	Результат = U_ПроцедурыРаботыСHTTP.ОтправитьДляОбработки(ПараметрыЗапроса, Данные, "JSON", "JSON");		
КонецФункции

#КонецОбласти
